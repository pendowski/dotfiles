[user]
	name = Jarek Pendowski
	email = jarek@pendowski.com
	signingkey = C32BE2AD

[color]
	ui = auto

[core]
	editor = pico
	excludesfile = /Users/shw/.gitignore_global

[alias]
	st = status
	co = checkout
	ci = commit
	cia = commit -a
	cp = cherry-pick
	ps = push
	psa = !git remote | xargs -L1 git push --all
	pl = pull
	cloner = clone --recursive
	cod = !git checkout develop
	pod = !git checkout develop && git pull
	rod = !git checkout develop && git pull && git checkout - && git rebase develop
	logs = !git log --pretty=oneline
	reword = !git ci --amend
	today = !git logs --author=`git config user.email` --since=am
	recent = !git recent-all | head -n 20 | uniq
	recent-all = !git reflog | awk '/checkout: moving from /{ if (!seen[$NF]++) print $NF }'
	reho = !git fetch && git reset --hard origin/`git rev-parse --abbrev-ref HEAD`
	hist = !git log --oneline --all --color --graph --decorate
	wip = !git cia -m "WIP"
	junk = !find -E . -regex '.*(\\.orig|\\.LOCAL|\\.BASE)$' -print0 | xargs -0 rm
	cor = !git co $(git recent | fzf)
	corr = !git co $(git branch -a | fzf)
	change = "!f() { git diff \"$1^\" \"$1\"; }; f"
	pr = "!f() { open "https://github.com/$(git remote get-url origin | tr ':' '\n' | tail -n 1 | tr '.git' '\n' | head -n 1)/pull/$(git rev-parse --abbrev-ref HEAD | tr '/' '\n' | tail -n 1)"; }; f" # https://gist.github.com/piscisaureus/3342247

[push]
	default = current
 	followTags = true
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustexitcode = true
[merge]
	tool = Kaleidoscope
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[mergetool]
	prompt = false
[diff]
	tool = Kaleidoscope
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
[commit]
	gpgsign = true
	template = /Users/shw/.stCommitMsg
#	template = ~/.stCommitMsg
